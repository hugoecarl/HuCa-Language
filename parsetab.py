
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'INTEGER RETURN WHILE IF ELSE OR AND LESS LESS_EQ GREATER GREATER_EQ EQTO TEXT VAR ABRE_COLCH FECHA_COLCH ABRE_PAREN FECHA_PAREN EQUAL ABRE_STATE FECHA_STATE MAIS MENOS VEZES DIVIDE END_STATE SHOW TRUE FALSE BLOCK NOT CONCAT ASP READ START_PROG END_PROG VIRG\n    upper_statement : START_PROG middle_statement END_PROG\n    \n    function : BLOCK TEXT ABRE_COLCH declarator upper_statement\n    \n    function_call : TEXT ABRE_COLCH declarator \n    \n    declarator : VAR FECHA_COLCH\n               | FECHA_COLCH\n               | VAR VIRG declarator\n               | expression FECHA_COLCH\n               | expression VIRG FECHA_COLCH\n    \n    upper_statement : ABRE_STATE middle_statement FECHA_STATE\n    \n    middle_statement : statement middle_statement\n                     | statement\n \n    \n    statement : IF ABRE_COLCH expression FECHA_COLCH upper_statement\n              | IF ABRE_COLCH expression FECHA_COLCH upper_statement ELSE upper_statement\n              | WHILE ABRE_COLCH expression FECHA_COLCH upper_statement\n              | upper_statement\n              | RETURN expression END_STATE\n              | END_STATE\n              | SHOW expression END_STATE\n              | VAR EQUAL expression END_STATE\n              | function\n              | function_call END_STATE\n\n    \n    expression : relexpr\n    \n    relexpr : expr\n            | relexpr LESS expr\n            | relexpr LESS_EQ expr\n            | relexpr GREATER expr\n            | relexpr GREATER_EQ expr\n            | relexpr EQTO expr\n    \n    expr : term\n         | expr MAIS term\n         | expr MENOS term\n         | expr OR term\n         | expr CONCAT term\n    \n    term : factor\n         | term VEZES factor\n         | term DIVIDE factor\n         | term AND factor\n    \n    factor : INTEGER\n           | MAIS factor\n           | MENOS factor\n           | NOT factor\n           | ABRE_PAREN relexpr FECHA_PAREN\n           | ASP TEXT ASP\n           | TRUE\n           | FALSE\n           | READ ABRE_COLCH FECHA_COLCH\n           | function_call\n    '
    
_lr_action_items = {'START_PROG':([0,2,3,5,7,10,13,18,39,42,45,64,69,71,72,88,89,90,92,94,95,96,97,98,99,100,],[2,2,2,2,-15,-17,-20,-1,-21,-9,-16,-18,-5,2,2,-19,2,-4,-7,-12,-14,-2,-6,-8,2,-13,]),'ABRE_STATE':([0,2,3,5,7,10,13,18,39,42,45,64,69,71,72,88,89,90,92,94,95,96,97,98,99,100,],[3,3,3,3,-15,-17,-20,-1,-21,-9,-16,-18,-5,3,3,-19,3,-4,-7,-12,-14,-2,-6,-8,3,-13,]),'$end':([1,18,42,],[0,-1,-9,]),'IF':([2,3,5,7,10,13,18,39,42,45,64,88,94,95,96,100,],[6,6,6,-15,-17,-20,-1,-21,-9,-16,-18,-19,-12,-14,-2,-13,]),'WHILE':([2,3,5,7,10,13,18,39,42,45,64,88,94,95,96,100,],[8,8,8,-15,-17,-20,-1,-21,-9,-16,-18,-19,-12,-14,-2,-13,]),'RETURN':([2,3,5,7,10,13,18,39,42,45,64,88,94,95,96,100,],[9,9,9,-15,-17,-20,-1,-21,-9,-16,-18,-19,-12,-14,-2,-13,]),'END_STATE':([2,3,5,7,10,13,14,18,22,23,24,25,28,29,33,34,36,37,39,42,45,58,59,60,64,65,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,92,94,95,96,97,98,100,],[10,10,10,-15,-17,-20,39,-1,45,-22,-23,-29,-34,-38,-44,-45,-47,64,-21,-9,-16,-39,-40,-41,-18,88,-3,-5,-24,-25,-26,-27,-28,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-19,-4,-7,-12,-14,-2,-6,-8,-13,]),'SHOW':([2,3,5,7,10,13,18,39,42,45,64,88,94,95,96,100,],[11,11,11,-15,-17,-20,-1,-21,-9,-16,-18,-19,-12,-14,-2,-13,]),'VAR':([2,3,5,7,10,13,18,39,41,42,45,64,66,88,91,94,95,96,100,],[12,12,12,-15,-17,-20,-1,-21,68,-9,-16,-18,68,-19,68,-12,-14,-2,-13,]),'BLOCK':([2,3,5,7,10,13,18,39,42,45,64,88,94,95,96,100,],[15,15,15,-15,-17,-20,-1,-21,-9,-16,-18,-19,-12,-14,-2,-13,]),'TEXT':([2,3,5,7,9,10,11,13,15,18,20,21,26,27,30,31,32,38,39,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,64,66,88,91,94,95,96,100,],[16,16,16,-15,16,-17,16,-20,40,-1,16,16,16,16,16,16,62,16,-21,16,-9,-16,16,16,16,16,16,16,16,16,16,16,16,16,-18,16,-19,16,-12,-14,-2,-13,]),'END_PROG':([4,5,7,10,13,18,19,39,42,45,64,88,94,95,96,100,],[18,-11,-15,-17,-20,-1,-10,-21,-9,-16,-18,-19,-12,-14,-2,-13,]),'FECHA_STATE':([5,7,10,13,17,18,19,39,42,45,64,88,94,95,96,100,],[-11,-15,-17,-20,42,-1,-10,-21,-9,-16,-18,-19,-12,-14,-2,-13,]),'ABRE_COLCH':([6,8,16,35,40,],[20,21,41,63,66,]),'INTEGER':([9,11,20,21,26,27,30,31,38,41,46,47,48,49,50,51,52,53,54,55,56,57,66,91,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'MAIS':([9,11,20,21,24,25,26,27,28,29,30,31,33,34,36,38,41,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,92,97,98,],[26,26,26,26,51,-29,26,26,-34,-38,26,26,-44,-45,-47,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-39,-40,-41,26,-3,-5,51,51,51,51,51,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,26,-7,-6,-8,]),'MENOS':([9,11,20,21,24,25,26,27,28,29,30,31,33,34,36,38,41,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,92,97,98,],[27,27,27,27,52,-29,27,27,-34,-38,27,27,-44,-45,-47,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-39,-40,-41,27,-3,-5,52,52,52,52,52,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,27,-7,-6,-8,]),'NOT':([9,11,20,21,26,27,30,31,38,41,46,47,48,49,50,51,52,53,54,55,56,57,66,91,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'ABRE_PAREN':([9,11,20,21,26,27,30,31,38,41,46,47,48,49,50,51,52,53,54,55,56,57,66,91,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'ASP':([9,11,20,21,26,27,30,31,38,41,46,47,48,49,50,51,52,53,54,55,56,57,62,66,91,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,86,32,32,]),'TRUE':([9,11,20,21,26,27,30,31,38,41,46,47,48,49,50,51,52,53,54,55,56,57,66,91,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FALSE':([9,11,20,21,26,27,30,31,38,41,46,47,48,49,50,51,52,53,54,55,56,57,66,91,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'READ':([9,11,20,21,26,27,30,31,38,41,46,47,48,49,50,51,52,53,54,55,56,57,66,91,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'EQUAL':([12,],[38,]),'ELSE':([18,42,94,],[-1,-9,99,]),'FECHA_COLCH':([23,24,25,28,29,33,34,36,41,43,44,58,59,60,63,66,67,68,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,92,93,97,98,],[-22,-23,-29,-34,-38,-44,-45,-47,69,71,72,-39,-40,-41,87,69,-3,90,-5,92,-24,-25,-26,-27,-28,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,69,-7,98,-6,-8,]),'VIRG':([23,24,25,28,29,33,34,36,58,59,60,67,68,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[-22,-23,-29,-34,-38,-44,-45,-47,-39,-40,-41,-3,91,-5,93,-24,-25,-26,-27,-28,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'LESS':([23,24,25,28,29,33,34,36,58,59,60,61,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[46,-23,-29,-34,-38,-44,-45,-47,-39,-40,-41,46,-3,-5,-24,-25,-26,-27,-28,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'LESS_EQ':([23,24,25,28,29,33,34,36,58,59,60,61,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[47,-23,-29,-34,-38,-44,-45,-47,-39,-40,-41,47,-3,-5,-24,-25,-26,-27,-28,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'GREATER':([23,24,25,28,29,33,34,36,58,59,60,61,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[48,-23,-29,-34,-38,-44,-45,-47,-39,-40,-41,48,-3,-5,-24,-25,-26,-27,-28,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'GREATER_EQ':([23,24,25,28,29,33,34,36,58,59,60,61,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[49,-23,-29,-34,-38,-44,-45,-47,-39,-40,-41,49,-3,-5,-24,-25,-26,-27,-28,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'EQTO':([23,24,25,28,29,33,34,36,58,59,60,61,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[50,-23,-29,-34,-38,-44,-45,-47,-39,-40,-41,50,-3,-5,-24,-25,-26,-27,-28,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'FECHA_PAREN':([24,25,28,29,33,34,36,58,59,60,61,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[-23,-29,-34,-38,-44,-45,-47,-39,-40,-41,85,-3,-5,-24,-25,-26,-27,-28,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'OR':([24,25,28,29,33,34,36,58,59,60,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[53,-29,-34,-38,-44,-45,-47,-39,-40,-41,-3,-5,53,53,53,53,53,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'CONCAT':([24,25,28,29,33,34,36,58,59,60,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[54,-29,-34,-38,-44,-45,-47,-39,-40,-41,-3,-5,54,54,54,54,54,-30,-31,-32,-33,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'VEZES':([25,28,29,33,34,36,58,59,60,67,69,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[55,-34,-38,-44,-45,-47,-39,-40,-41,-3,-5,55,55,55,55,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'DIVIDE':([25,28,29,33,34,36,58,59,60,67,69,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[56,-34,-38,-44,-45,-47,-39,-40,-41,-3,-5,56,56,56,56,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),'AND':([25,28,29,33,34,36,58,59,60,67,69,78,79,80,81,82,83,84,85,86,87,90,92,97,98,],[57,-34,-38,-44,-45,-47,-39,-40,-41,-3,-5,57,57,57,57,-35,-36,-37,-42,-43,-46,-4,-7,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'upper_statement':([0,2,3,5,71,72,89,99,],[1,7,7,7,94,95,96,100,]),'middle_statement':([2,3,5,],[4,17,19,]),'statement':([2,3,5,],[5,5,5,]),'function':([2,3,5,],[13,13,13,]),'function_call':([2,3,5,9,11,20,21,26,27,30,31,38,41,46,47,48,49,50,51,52,53,54,55,56,57,66,91,],[14,14,14,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expression':([9,11,20,21,38,41,66,91,],[22,37,43,44,65,70,70,70,]),'relexpr':([9,11,20,21,31,38,41,66,91,],[23,23,23,23,61,23,23,23,23,]),'expr':([9,11,20,21,31,38,41,46,47,48,49,50,66,91,],[24,24,24,24,24,24,24,73,74,75,76,77,24,24,]),'term':([9,11,20,21,31,38,41,46,47,48,49,50,51,52,53,54,66,91,],[25,25,25,25,25,25,25,25,25,25,25,25,78,79,80,81,25,25,]),'factor':([9,11,20,21,26,27,30,31,38,41,46,47,48,49,50,51,52,53,54,55,56,57,66,91,],[28,28,28,28,58,59,60,28,28,28,28,28,28,28,28,28,28,28,28,82,83,84,28,28,]),'declarator':([41,66,91,],[67,89,97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> upper_statement","S'",1,None,None,None),
  ('upper_statement -> START_PROG middle_statement END_PROG','upper_statement',3,'p_upper_program','lexic_syntax_analyzer_OLD.py',111),
  ('function -> BLOCK TEXT ABRE_COLCH declarator upper_statement','function',5,'p_function','lexic_syntax_analyzer_OLD.py',118),
  ('function_call -> TEXT ABRE_COLCH declarator','function_call',3,'p_function_call','lexic_syntax_analyzer_OLD.py',124),
  ('declarator -> VAR FECHA_COLCH','declarator',2,'p_declarator','lexic_syntax_analyzer_OLD.py',130),
  ('declarator -> FECHA_COLCH','declarator',1,'p_declarator','lexic_syntax_analyzer_OLD.py',131),
  ('declarator -> VAR VIRG declarator','declarator',3,'p_declarator','lexic_syntax_analyzer_OLD.py',132),
  ('declarator -> expression FECHA_COLCH','declarator',2,'p_declarator','lexic_syntax_analyzer_OLD.py',133),
  ('declarator -> expression VIRG FECHA_COLCH','declarator',3,'p_declarator','lexic_syntax_analyzer_OLD.py',134),
  ('upper_statement -> ABRE_STATE middle_statement FECHA_STATE','upper_statement',3,'p_upper_statement','lexic_syntax_analyzer_OLD.py',147),
  ('middle_statement -> statement middle_statement','middle_statement',2,'p_middle_statement','lexic_syntax_analyzer_OLD.py',153),
  ('middle_statement -> statement','middle_statement',1,'p_middle_statement','lexic_syntax_analyzer_OLD.py',154),
  ('statement -> IF ABRE_COLCH expression FECHA_COLCH upper_statement','statement',5,'p_statement','lexic_syntax_analyzer_OLD.py',164),
  ('statement -> IF ABRE_COLCH expression FECHA_COLCH upper_statement ELSE upper_statement','statement',7,'p_statement','lexic_syntax_analyzer_OLD.py',165),
  ('statement -> WHILE ABRE_COLCH expression FECHA_COLCH upper_statement','statement',5,'p_statement','lexic_syntax_analyzer_OLD.py',166),
  ('statement -> upper_statement','statement',1,'p_statement','lexic_syntax_analyzer_OLD.py',167),
  ('statement -> RETURN expression END_STATE','statement',3,'p_statement','lexic_syntax_analyzer_OLD.py',168),
  ('statement -> END_STATE','statement',1,'p_statement','lexic_syntax_analyzer_OLD.py',169),
  ('statement -> SHOW expression END_STATE','statement',3,'p_statement','lexic_syntax_analyzer_OLD.py',170),
  ('statement -> VAR EQUAL expression END_STATE','statement',4,'p_statement','lexic_syntax_analyzer_OLD.py',171),
  ('statement -> function','statement',1,'p_statement','lexic_syntax_analyzer_OLD.py',172),
  ('statement -> function_call END_STATE','statement',2,'p_statement','lexic_syntax_analyzer_OLD.py',173),
  ('expression -> relexpr','expression',1,'p_expression','lexic_syntax_analyzer_OLD.py',191),
  ('relexpr -> expr','relexpr',1,'p_relexpr','lexic_syntax_analyzer_OLD.py',197),
  ('relexpr -> relexpr LESS expr','relexpr',3,'p_relexpr','lexic_syntax_analyzer_OLD.py',198),
  ('relexpr -> relexpr LESS_EQ expr','relexpr',3,'p_relexpr','lexic_syntax_analyzer_OLD.py',199),
  ('relexpr -> relexpr GREATER expr','relexpr',3,'p_relexpr','lexic_syntax_analyzer_OLD.py',200),
  ('relexpr -> relexpr GREATER_EQ expr','relexpr',3,'p_relexpr','lexic_syntax_analyzer_OLD.py',201),
  ('relexpr -> relexpr EQTO expr','relexpr',3,'p_relexpr','lexic_syntax_analyzer_OLD.py',202),
  ('expr -> term','expr',1,'p_expr','lexic_syntax_analyzer_OLD.py',211),
  ('expr -> expr MAIS term','expr',3,'p_expr','lexic_syntax_analyzer_OLD.py',212),
  ('expr -> expr MENOS term','expr',3,'p_expr','lexic_syntax_analyzer_OLD.py',213),
  ('expr -> expr OR term','expr',3,'p_expr','lexic_syntax_analyzer_OLD.py',214),
  ('expr -> expr CONCAT term','expr',3,'p_expr','lexic_syntax_analyzer_OLD.py',215),
  ('term -> factor','term',1,'p_term','lexic_syntax_analyzer_OLD.py',224),
  ('term -> term VEZES factor','term',3,'p_term','lexic_syntax_analyzer_OLD.py',225),
  ('term -> term DIVIDE factor','term',3,'p_term','lexic_syntax_analyzer_OLD.py',226),
  ('term -> term AND factor','term',3,'p_term','lexic_syntax_analyzer_OLD.py',227),
  ('factor -> INTEGER','factor',1,'p_factor','lexic_syntax_analyzer_OLD.py',237),
  ('factor -> MAIS factor','factor',2,'p_factor','lexic_syntax_analyzer_OLD.py',238),
  ('factor -> MENOS factor','factor',2,'p_factor','lexic_syntax_analyzer_OLD.py',239),
  ('factor -> NOT factor','factor',2,'p_factor','lexic_syntax_analyzer_OLD.py',240),
  ('factor -> ABRE_PAREN relexpr FECHA_PAREN','factor',3,'p_factor','lexic_syntax_analyzer_OLD.py',241),
  ('factor -> ASP TEXT ASP','factor',3,'p_factor','lexic_syntax_analyzer_OLD.py',242),
  ('factor -> TRUE','factor',1,'p_factor','lexic_syntax_analyzer_OLD.py',243),
  ('factor -> FALSE','factor',1,'p_factor','lexic_syntax_analyzer_OLD.py',244),
  ('factor -> READ ABRE_COLCH FECHA_COLCH','factor',3,'p_factor','lexic_syntax_analyzer_OLD.py',245),
  ('factor -> function_call','factor',1,'p_factor','lexic_syntax_analyzer_OLD.py',246),
]
